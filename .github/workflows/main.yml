name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@master
        # JDK version 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        # 그래들 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 서비스에 필요한 yml 파일 생성
      # application-oauth.yml 생성
      - name: Make application-oauth.yml
        if: |
          contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application-oauth.yml
          echo "${{ secrets.APPLICATION_OAUTH }}" > ./application-oauth.yml
        shell: bash

        # application-s3.yml 생성
      - name: Make application-s3.yml
        if: |
          contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application-s3.yml
          echo "${{ secrets.APPLICATION_S3 }}" > ./application-s3.yml
        shell: bash

        # application-app.yml 생성
      - name: Make application-app.yml
        if: |
          contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application-app.yml
          echo "${{ secrets.APPLICATION_APP }}" > ./application-app.yml
        shell: bash

        # application-prod.yml 생성
      - name: Make application-prod.yml
        if: |
          contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml
        shell: bash

        # main 설정 파일 생성 및 write
      - name: Make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Make zip file
        run: |
          mkdir deploy
          cp ./docker-compose.blue.yml ./deploy/
          cp ./docker-compose.green.yml ./deploy/
          cp ./appspec.yml ./deploy/
          cp ./Dockerfile ./deploy/
          cp ./scripts/*.sh ./deploy/
          cp ./build/libs/motticle-0.0.1-SNAPSHOT.jar ./deploy/
          zip -r -qq -j ./motticle-build.zip ./deploy

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp \
            --region ap-northeast-2 \
            ./motticle-build.zip s3://motticle-s3

      # 추가
      - name: Code Deploy
        run: aws deploy create-deployment --application-name motticle-deploy
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name motticle-deploy-group
          --s3-location bucket=motticle-s3,bundleType=zip,key=motticle-build.zip
